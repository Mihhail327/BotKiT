from core.fsm import fsm

async def feedback_handler(update: dict) -> str:

    """
    FSM-—Ñ–æ—Ä–º–∞: –∏–º—è ‚Üí email ‚Üí —Å–æ–æ–±—â–µ–Ω–∏–µ.
    –£–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
    """
    user_id = update.get("user_id")
    text = update.get("text", "").strip()

    # üîç –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    state = fsm.get_state(user_id)

    if not state:
        # üü¢ –°—Ç–∞—Ä—Ç: —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        fsm.set_state(user_id, "awaiting_name")
        return "–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?"

    elif state == "awaiting_name":
        # üü° –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ email
        fsm.set_data(user_id, "name", text)
        fsm.set_state(user_id, "awaiting_email")
        return "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email:"

    elif state == "awaiting_email":
        # üîµ –°–æ—Ö—Ä–∞–Ω—è–µ–º email –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
        fsm.set_data(user_id, "email", text)
        fsm.set_state(user_id, "awaiting_message")
        return "–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:"

    elif state == "awaiting_message":
        # üü£ –§–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥: —Å–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        name = fsm.get_data(user_id, "name") or "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
        email = fsm.get_data(user_id, "email") or "–Ω–µ —É–∫–∞–∑–∞–Ω–æ"
        message = text

        # üßπ –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        fsm.reset_state(user_id)

        return (
            f"–°–ø–∞—Å–∏–±–æ, {name}!\n"
            f"–ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n"
            f"üìß {email}\n"
            f"üìù {message}"
        )

    else:
        # ‚ùå –ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ‚Äî —Å–±—Ä–∞—Å—ã–≤–∞–µ–º –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
        fsm.reset_state(user_id)
        return "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ù–∞—á–Ω—ë–º —Å–Ω–∞—á–∞–ª–∞: /feedback"

