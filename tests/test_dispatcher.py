import pytest
from core.dispatcher import Dispatcher
from core.router import Router

# üéØ –•–µ–Ω–¥–ª–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—Å—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç
# –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç—Ä–∞–∫—Ç: –ø—Ä–∏–Ω–∏–º–∞–µ—Ç update: dict, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç str
async def echo_handler(update: dict) -> str:
    return f"echo: {update['text']}"

@pytest.mark.asyncio
async def test_dispatcher_known_command():
    """
    ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
    - –ß—Ç–æ Dispatcher –≤—ã–∑—ã–≤–∞–µ—Ç –Ω—É–∂–Ω—ã–π —Ö–µ–Ω–¥–ª–µ—Ä
    - –ß—Ç–æ –æ—Ç–≤–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–Ω–∏—è–º
    """

    # üîß –°–æ–∑–¥–∞—ë–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É
    router = Router()
    router.register("/echo", echo_handler)

    # üöÄ –°–æ–∑–¥–∞—ë–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä —Å —ç—Ç–∏–º –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä–æ–º
    dispatcher = Dispatcher(router)

    # üì¶ –°–∏–º—É–ª–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–∏–π –∞–ø–¥–µ–π—Ç
    update = {"user_id": 1, "text": "/echo Hello"}

    # üß™ –í—ã–∑—ã–≤–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    response = await dispatcher.dispatch(update)
    assert response == "echo: /echo Hello"

@pytest.mark.asyncio
async def test_dispatcher_unknown_command():
    """
    ‚ùì –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
    - –ß—Ç–æ Dispatcher –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
    """

    # üîß –ü—É—Å—Ç–æ–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä ‚Äî –Ω–∏ –æ–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞
    router = Router()
    dispatcher = Dispatcher(router)

    # üì¶ –ê–ø–¥–µ–π—Ç —Å –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π –∫–æ–º–∞–Ω–¥–æ–π
    update = {"user_id": 1, "text": "/unknown"}

    # üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç
    response = await dispatcher.dispatch(update)
    assert response == "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞."